[{"title":"搭建个人博客","url":"/2022/03/07/Hexo博客搭建/"},{"title":"微信小程序之冒泡事件","url":"/2019/10/10/微信小程序之bind事件与catch事件区别/","content":"\n**简介**\n- 小程序中的事件分为<font color=#f33b45>冒泡事件</font>和<font color=#f33b45>非冒泡事件</font>两类。(一般默认是可冒泡的)\n- 用<font color=#f33b45>bind</font>绑定的事件<font color=#f33b45>不会阻止冒泡事件向上冒泡</font>，<font color=#f33b45>catch</font>绑定的事件<font color=#f33b45>可以阻止冒泡事件向上冒泡</font>(下面以tap点击事件为例来讲解二者区别)\n\t<font size=3px color=#999999> &emsp;&emsp;&nbsp;例：bindtap和catchtap事件都是当用户点击该组件的时候会执行该页面对应的Page中找到相应的事件处理函数，但是不同的是用bindtap不会阻止冒泡事件向上冒泡，catchtap会阻止冒泡事件向上冒泡(下面的实例会让你对二者有更清晰直观的认识)</font>  \n\n**实例**\n\nwxml:三层view从里到外嵌套\n```html\n<view id=\"outside\"  bindtap=\"outsideTap\">\n\n         outside view\n         \n    <view id=\"middle\" bindtap=\"middleTap\">\n    \n         middle view\n \n       <view id=\"inside\" bindtap=\"insideTap\">\n \n        inside view\n \n       </view>\n \n   </view>\n \n</view>\n```\njs:事件处理函数\n\n```javascript\n\noutsideTap:function(){\n \n     console.log(\"触发了外部事件\")\n \n},\n middleTap: function () {\n \n     console.log(\"触发了中部事件\")\n \n}, \ninsideTap: function () {\n  \n     console.log(\"触发了内部事件\")\n \n}\n```\n**实例解析：**\n- 三个view均绑定bindtap事件\n\t* 点击outside view打印 \"触发了外部事件\"；\n点击middle view打印 \"触发了中部事件\"   和   \"触发了外部事件\"；\n点击inside view打印 \"触发了内部事件\"   和   \"触发了中部事件\" 和    \"触发了外部事件\" ；\n- 若将中部的midele view的bindtap事件改为catchtap事件  \n\t* 点击middle view打印 \"触发了中部事件\"  (catchtap阻止了继续向上冒泡触发outsideTap事件)；\n点击inside view打印 \"触发了内部事件\"   和   \"触发了中部事件\" (catchtap阻止了继续向上冒泡触发outsideTap事件) ;","tags":["-小程序 - 事件冒泡"],"categories":["微信小程序"]},{"title":"微信小程序之文件下载","url":"/2019/10/10/微信小程序之文件下载/","content":"\n昨晚小程序前台调用API去后台请求图片文件，结果发现返回的是一堆乱码，也没法在image里显示出来，顿时懵了\n截图:   \n![](https://img-blog.csdnimg.cn/20191010092400961.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNjQxMzcz,size_16,color_FFFFFF,t_70)    \n本来以为是后台传的数据出问题了，但网上查了一下发现说后台传的是二进制流图片乱码，然后找到网上各种转码方式...然而，在我觉得快要成功的时候，却发现那些方式根本解决不了问题，如果你也发现解决不了，那可能和我犯了同样错误，我让自己冷静下来再检查一遍代码，结果发现了一处可能的错误并尝试修改：==文件下载只能用wx.downloadFile而不能是wx.request==\n\n-------------------------------------------------------------------------------\n###### 大概比较二者区别：\n- request用于ajax数据交互，不负责下载文件\n- downloadFile专门用于请求下载文件，请求后直接得到对应文件临时路径\n- --------------------------------------------------------------------------------------\n\t\n修改后返回的图片路径就可以直接在image中显示了","tags":["小程序","downloadFile"],"categories":["微信小程序"]},{"title":"weather_py","url":"/2019/07/23/weather-py/","content":"# python之中国天气网爬取\n![1](/images/weather_pyImages/weather1.jpg)\n![2](/images/weather_pyImages/weather2.jpg)   \n![](/images/weather_pyImages/weather3.jpg)   \n![](/images/weather_pyImages/weather4.jpg)   \n![](/images/weather_pyImages/weather附.jpg)\n\n","tags":["python爬虫小demo"],"categories":["python"]},{"title":"如何用git删除github远程仓库上的某个文件夹/文件","url":"/2019/07/19/git操作/","content":"\n\n\n###### 1.在讲解删除操作之前先复习一波简单的上传项目文件(以\"动画demo.md\"文件为例)到github步骤：  \n\n- 将要上传到github的项目文件粘贴到已初始化生成.git文件夹的本地git仓库中  \n  ![](/images/git操作/1.jpg)     \n\n- 空白处右击 -> Git Bash Here打开命令窗口\n\n- 敲下面命令行\n\t>  #将单个文件夹(如\"动画demo.md\")或全部文件夹添加到git仓库(暂存区)\n\tgit add  “文件/文件夹” 或者git add *\n\t#将暂存区的文件提交到git仓库(版本库)\n\tgit commit -m  \"对本次操作的修改说明\"\n\t#将文件上传到github远程仓库\n\tgit push -u origin master\n\t\n- 大功告成    \n![](/images/git操作/2.jpg)  \n\n---------------------------------------------------------------------------------------\n---------------------------------------------------------------------------------------\n###### 2.接下来讲解删除操作，大家知道在github上只能删除仓库而不能直接删除文件或文件夹(以\"动画demo.md\"为例)，有时候真的很头疼，所以只能通过命令行来解决了：\n- 删除前github仓库中：  \n![](/images/git操作/2.jpg)  \n- 在要删除github上文件对应本地git仓库中 -> 空白处右击 -> Git Bash Here打开命令窗口\n- 敲下面命令行\n\t>#将远程仓库里面的项目文件拉下来，然后可通过dir命令行查看有哪些文件夹\n\tgit pull origin master\n\t#删除文件(如“动画demo.md‘)或者文件夹\n\tgit rm --cached \"文件\"/git rm -r --cached \"文件夹'\n\t#将删除操作提交到git仓库\n\tgit commit -m \"操作说明\"\n\t#将本次修改更新到github远程仓库\n\tgit push -u origin master  \n\n-删除后github仓库中：   \n![](/images/git操作/3.jpg)   \n*注意须知:此删除操作只会删除github远程仓库和git仓库(暂存区和版本库)的文件(夹)，而git仓库的工作区(即本地目录)下的文件(夹)不受影响*\n\n","tags":["git"],"categories":["git&github"]},{"title":"hello","url":"/2019/07/19/hello-world - 副本 (10)/","content":"\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n\n\n\n","tags":["java","js","vue,go"],"categories":["Diary","Life"]},{"title":"hello","url":"/2019/07/19/hello-world - 副本 (2)/","content":"\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n\n\n\n","tags":["java","js","vue,go"],"categories":["Diary","Life"]},{"title":"hello","url":"/2019/07/19/hello-world - 副本 (4)/","content":"\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n\n\n\n","tags":["java","js","vue,go"],"categories":["Diary","Life"]},{"title":"hello","url":"/2019/07/19/hello-world - 副本 (3)/","content":"\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n\n\n\n","tags":["java","js","vue,go"],"categories":["Diary","Life"]},{"title":"hello","url":"/2019/07/19/hello-world - 副本 (5)/","content":"\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n\n\n\n","tags":["java","js","vue,go"],"categories":["Diary","Life"]},{"title":"hello","url":"/2019/07/19/hello-world - 副本 (6)/","content":"\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n\n\n\n","tags":["java","js","vue,go"],"categories":["Diary","Life"]},{"title":"hello","url":"/2019/07/19/hello-world - 副本 (8)/","content":"\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n\n\n\n","tags":["java","js","vue,go"],"categories":["Diary","Life"]},{"title":"hello","url":"/2019/07/19/hello-world - 副本 (9)/","content":"\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n\n\n\n","tags":["java","js","vue,go"],"categories":["Diary","Life"]},{"title":"hello","url":"/2019/07/19/hello-world - 副本 (7)/","content":"\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n\n\n\n","tags":["java","js","vue,go"],"categories":["Diary","Life"]},{"title":"hello","url":"/2019/07/19/hello-world/","content":"\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n\n\n\n","tags":["java","js","vue,go"],"categories":["Diary","Life"]},{"title":"hello","url":"/2019/07/19/hello-world - 副本/","content":"\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n\n\n\n","tags":["java","js","vue,go"],"categories":["Diary","Life"]},{"title":"hexo+git搭建个人blogsite","url":"/2019/07/19/hexo+git搭建个人博客站点/","content":"\n# hexo+git搭建个人博客平台\n\n\n\n## 一、环境准备\n\n### 安装node\n\n[Node官网](https://nodejs.org/en/)\n\n### 安装git\n\n[Git](https://www.git-scm.com/download/)\n\n然后配置邮箱和密码`git config --global user.name yourusername`和`git config --global user.email youruser@email`\n\n右击出现git bash here和git GUI即证明安装成功\n\n\n\n##  二、搭建\n\n## 安装hexo框架\n\n```js\n// 全局安装hexo脚手架，用于搭建hexo博客项目\nnpm install hexo-cli -g\n// 检查，我是v6.0.0\nhexo -v\n// 查看hexo的命令参数\n// 常用命令\n/*\nhexo n my-first     # 生成文章，默认保存在博客根目录的 source\\_posts 下，名为my-first.md\nhexo n page friends # 新建一个名为friends的网页，默认保存在博客根目录的 source下，为source/friends/index.md\nhexo s            # 开启本地服务，可在本地浏览器中输入http://localhost:4000进行查看\nhexo g            # 生成静态的 public 文件夹，部署时候也是直接拷贝此文件夹里的文件\nhexo clean        # 清除之前 public 文件夹的内容\nhexo d            # 部署到 Github 上，按照提示输入自己 Github 的用户名和密码。\n*/\nhexo h\n```\n\n### 创建本地博客文件夹\n\n在磁盘中创建，我在E:/Blog\n\n进入文件夹，右键git bash here，输入\n\n```js\n// 初始化\nhexo init\n// 安装依赖包，如果有了node_modules则已装好的就不用了\nhexo install\n```\n\n本地测试\n\n```js\nhexo s\n```\n\n打开浏览器输入 [http://localhost:4000](http://localhost:4000/) 就可以在本地查看博客的输出效果了。如果打开失败，则可能是因为4000端口已经被其他程序占用，我们只需要再重新制定一个端口即可，输入代码如下：\n\n```js\nhexo server -p X  #X为你想要修改的端口号\n```\n\n## 三、部署到远程\n\n> 为了让博客站点可以在外网被访问，我们可以选择部署到自己的服务器或者 github/gitee等平台托管\n>\n> 这里以github为例\n\n## 注册自己的github账号\n\n[github](https://github.com)\n\n### 创建仓库\n\n仓库名为 `yourname.github.io`(我的是fmlry.github.io)!!!切记yourname一定要是你的github账号名称\n\n类型为`public`\n\n###  开通Github Pages功能\n\n我的是默认开通了\n\n### Hexo安装Git插件\n\n> 让hexo可以通过git命令部署到github\n\n回到我们本地博客的根目录，右键 Git Bash Here，输入如下:\n\n```js\nnpm install hexo-deployer-git --save\n```\n\n### 配置博客与github仓库的关联\n\n然后打开本地博客根目录下的 _config.yml 文件，最下面找到 deploy属性 ,做如下修改：\n\n```js\ndeploy:\n  // git管理\n  type: git\n  // 博客远程仓库地址：这里可以选择https的也可以选择ssh的地址(我用ssh地址)\n  // \t- https地址：后续每次更新博客部署时需要输入github账号密码\n  // \t- ssh地址：后续每次更新博客部署不需要输入账号密码(前提工作：需要生成本机ssh放到github上，参考链接：https://blog.csdn.net/qq_35495339/article/details/92847819)\n  repo: git@github.com:fmlry/fmlry.github.io.git #这里只要把fmlry换成你自己的名字就好，其他不用动\n  // github仓库的分支，注意看你创建的仓库分支是master还是main\n  branch: master\n```\n\n### 生成静态文件和部署\n\n在博客根目录下运行Git Bash here，依次运行:\n\n```js\nhexo clean\nhexo g\nhexo d\n// 或\nhexo clean\nhexo g -d\n```\n\n结果显示`Deploy done: git`则部署成功，那么浏览器输入https://fmlry.githu.io 就可以访问到了\n\n\n\n## 三、主题配置\n\n>  到[hexo官网](https://hexo.io/zh-cn/) 选择你喜欢的主题（hexo官网上有很多主题和插件可供使用）\n\n\n\n### 1、主题选择\n\n我选择的是stun主题，一个漂亮、简洁的 Hexo 主题<我的版本是`v6.2.6`>\n\n### 2、主题下载和配置\n\n#### 下载安装\n\n到[stun主题源码官网](https://github.com/liuyib/hexo-theme-stun) 根据官网上的说明下载安装即可\n\n```js\n// 1.安装\n//进入 Hexo 根目录，执行指令：\ngit clone https://github.com/liuyib/hexo-theme-stun.git themes/stun\n//安装依赖 hexo-renderer-pug\n//进入 Hexo 根目录，执行指令：\nnpm install --save hexo-renderer-pug\n\n// 2.使用\n//修改 Hexo 根目录下的 _config.yml 文件：\ntheme: stun\n//然后，启动 Hexo 服务器：\nhexo clean && hexo s(也可以hexo clean，hexo g -d部署到github访问)\n\n// 3.更新\ncd themes/stun\ngit pull\n```\n\n#### 配置\n\n根据配置文档进行相应配置即可\n\n[stun配置文档](https://theme-stun.github.io/docs/zh-CN/) \n\n[stun配置文档源码](https://github.com/theme-stun/docs) 已下载到本地，可以直接npm i和npm run xx打开\n\n\n\nps:\n\n1. 配置中发现的主题bug：\n\n   特效的canvas_ribbon类型和启用赞赏码 冲突，点击赞赏码按钮无效？\n\n   要么必须刷新当前页面才有效\n\n   要么去掉canvas_ribbon特效或者换成canvas_nest特效才有效\n\n   [已提issue31 -> https://github.com/liuyib/hexo-theme-stun/issues/268]\n\n2. 主题的文件已存了一份在本地：‘E:\\Blog主题stun v6.2.6源码和主题文档源码本地备份’\n\n\n\n后序：\n\n搭建博客的框架很多，选择自己喜欢的一款搭建就好了，hexo，WordPress，typecho，各有所好。\n\n","tags":["java","js"],"categories":["Diary","Life"]}]